//AIDAN GRIEVE -- CS302

//combatant.h
//Parent class to each individual piece. Used to hold the information for whichever piece is chosen by the player.
//Essential for gameplay, and is used for the common functions between each unique piece.
//Keeps track of the state of the chosen combatant and displays that information. Holds the attacks and calls the damage calculator.
//Objects are held in the player class.

#pragma once
#ifndef __COMBATANT_H

#include <iostream>
#include <vector>
#include <string>
#include <cstring>
#include <chrono>
#include <thread>

#include "attack.h"
#include "damagecalc.h"
#include "turn.h"
//#include "attackList.h"

using std::cout, std::endl;

class Combatant
{
	public:
		
		//default constructor
		Combatant();

		//copy constructor, source is the Combatant object to be copied
		Combatant(const Combatant &source);

		//constructor, n is the name, hp is the hitpoints, en is the energy, and a_1 is the vector of attacks generated in child class
		Combatant(char *& n, int hp, int en, std::vector<Attack> a_l);

		//virtual destructor in order to destroy child objects in parent pointer
		virtual ~Combatant();

		//operator overload, c is the Combatant object to be assigned
		Combatant& operator=(const Combatant &c);	

		//clears screen
		void clear();
		
		//allows text input and calculates damage based on entry, atk_choice is the attack chosen by the player and p is the Turn_Portion
		//generated when a player takes a turn
		int use_attack(int &atk_choice, Turn_Portion *& p);

		//regain energy, val is the number to add to combatant energy
		void regen(int val);

		//checks if hp = 0
		bool is_dead();
		
		//check if energy > attack choice energy cost, choice is the player's choice on attack
		bool enough_en(int & choice);

		//name applies
		void display_comb_name();

		//name applies
		void display_stats();

		//lowers hp by damage, damage is generated by other players turn and returned to game object
		void update_hp(int &damage);
	
		//lowers energy by choice energy cost, choice is the attack chosen by the player
		void update_energy(int &choice);

		//name applies
		void display_attack_list();

		//name applies, choice is the attack chosen by the player
		void display_attack_text(int &choice);

	private:
		
		char * comb_name;	
		int hitpoints;
		int energy;
		int total_energy;
		std::vector<Attack> attack_list;	
};

#endif //__COMBATANT_H
